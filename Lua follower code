local socket = require("socket")

-- Function to receive UDP messages
function receive_udp_message(port)
    local udp = socket.udp()
    udp:setsockname('*', port)
    udp:settimeout(2) -- Set timeout for receiving
    local data, msg_or_ip, port_or_nil = udp:receivefrom()
    udp:close()
    return data, msg_or_ip, port_or_nil
end

local receive_port = FOLLOWER_DRONE_PORT -- Replace with the port for receiving data on this drone

while true do
    -- Receive location data
    local data, _, _ = receive_udp_message(receive_port)

    if data then
        local lat, lon, alt = string.match(data, "([^,]+),([^,]+),([^,]+)")
        lat = tonumber(lat)
        lon = tonumber(lon)
        alt = tonumber(alt)

        if lat and lon and alt then
            print("Received location data: Latitude: " .. lat .. ", Longitude: " .. lon .. ", Altitude: " .. alt)

            -- logic to process this data
            -- For example, adjusting the drone's position to follow the leader
        else
            print("Invalid location data received.")
        end
    else
        print("No data received.")
    end

    socket.sleep(1) -- Wait for 1 second
end
