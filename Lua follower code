local socket = require("socket")

-- Create a UDP socket
local udp = assert(socket.udp())

-- Bind to the local address and port
udp:setsockname('127.0.0.1', 12346)

-- Set timeout for the receive function
udp:settimeout(2) -- Timeout in seconds

local current_master_drone_id = nil

while true do
    -- Receive the message
    local data, msg_or_ip, port_or_nil = udp:receivefrom()

    if data then
        -- Check for the new master drone keyword
        if data:find("NEW_MASTER") then
            -- Extract the new master drone ID
            local new_master_id = data:match("NEW_MASTER,(%d+)")

            if new_master_id then
                new_master_id = tonumber(new_master_id) -- Convert to number for comparison

                if current_master_drone_id ~= new_master_id then
                    current_master_drone_id = new_master_id
                    print("!!! Master drone now: Drone " .. new_master_id)
                end
            end
        elseif data:find("MAV") then
            -- Extract MAC address, drone ID, latitude, longitude, and altitude
            local mac_address, drone_id, latitude, longitude, altitude = data:match("MAV,(%w+:%w+:%w+:%w+:%w+:%w+),(%d+),(%-?%d+%.?%d*),(%-?%d+%.?%d*),(%-?%d+%.?%d*)")
            
            -- Process the received data
            if drone_id and mac_address and latitude and longitude and altitude then
                drone_id = tonumber(drone_id) -- Convert to number to compare properly with the current_master_drone_id
                print("Data received from Drone ID: " .. drone_id)
                print("MAC Address: " .. mac_address)
                print("Latitude: " .. latitude)
                print("Longitude: " .. longitude)
                print("Altitude: " .. altitude)
            else
                print("Invalid MAVLink data format received.")
            end
        else
            print("Invalid data received.")
        end
    else
        -- Print the error message if no data was received
        print("No data received. Message or Error: " .. tostring(msg_or_ip))
    end

    -- You can add a short delay to prevent the loop from running too fast, but it is optional
    socket.sleep(0.1)
end
